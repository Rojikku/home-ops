---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  dependsOn:
    - name: minio-tenant
      namespace: minio
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.20.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    replicas: 1
    envFromSecret: "grafana"
    admin:
      existingSecret: "grafana"
      userKey: admin-user
      passwordKey: admin-password
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY HH:mm:ss"
      GF_DATE_FORMATS_INTERVAL_SECOND: "HH:mm:ss"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "HH:mm"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM HH:mm"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
      # VAR_BLOCKY_URL: "http://blocky.networking.svc.cluster.local:4000"
    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
        serve_from_sub_path: false
      auth:
        signout_redirect_url: https://auth.${SECRET_DOMAIN}/application/o/grafana/end-session/
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        name: Authentik
        scopes: openid profile email
        auth_url: https://auth.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://auth.${SECRET_DOMAIN}/application/o/token/
        api_url: https://auth.${SECRET_DOMAIN}/application/o/userinfo/
      auth.generic_oauth.group_mapping:
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
        org_id: 1
      auth.anonymous:
        enabled: false
        org_id: 1
        org_role: Viewer
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      database:
        type: postgres
        user: postgres
        host: grafana-postgres
        name: postgres
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus-operated:9090/
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/2842
        ceph-cluster:
          gnetId: 2842
          revision: 14
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        ceph-osd:
          gnetId: 5336
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        ceph-pools:
          gnetId: 5342
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        hajimari.io/enable: "true"
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: "chart-areaspline-variant"
        hajimari.io/instance: "monitor"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
          secretName: "grafana-tls"
    serviceAccount:
      create: true
      autoMount: true
    persistence:
      enabled: false
